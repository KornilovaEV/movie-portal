{"version":3,"file":"static/js/362.128a5233.chunk.js","mappings":"6QAEA,QCKe,WACb,MAAM,WAACA,IAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAOhC,OALAC,EAAAA,EAAAA,YAAU,KACNC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUP,GAAY,GAC/D,CAACA,KAIFQ,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAEC,cAAc,MAAOC,SAAS,OAAOC,eAAe,SAAQC,SACrEb,EAAWc,OAAS,EAAId,EAAWe,KAAIC,IAEtCC,EAAAA,EAAAA,MAACR,EAAAA,EAAK,CAAyBS,WAAW,SAASC,GAAI,CAAEC,SAAU,YAAaP,SAAA,EAC9EL,EAAAA,EAAAA,KAACa,EAAAA,EAAa,CAACL,MAAOA,KAExBR,EAAAA,EAAAA,KAACc,EAAAA,GAAU,CAACC,GAAE,UAAAC,OAAYR,EAAMS,aAAeT,EAAMU,QAASb,UAC5DL,EAAAA,EAAAA,KAAA,OAAMmB,IAAKX,EAAMY,iBAAkBC,IAAKb,EAAMc,OAAQC,UAAWC,EAAAA,EAAOC,SAE1EzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAACC,UAAWb,EAAAA,GAAYC,GAAE,UAAAC,OAAYR,EAAMS,aAAeT,EAAMU,QAAUK,UAAWC,EAAAA,EAAOI,eAAevB,SAAEG,EAAMc,OAASd,EAAMc,OAASd,EAAMqB,UAEtJrB,EAAMsB,kBACL9B,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAI,UACJL,EAAAA,EAAAA,KAAC+B,EAAAA,EAAO,CAACC,MAAK,GAAAhB,OAAKR,EAAMsB,gBAAe,SAAQzB,UAC9CL,EAAAA,EAAAA,KAACiC,EAAAA,EAAG,CAAA5B,UACFL,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACC,KAAK,YAAYC,MAAO5B,EAAMsB,gBAAiB,EAAGO,UAAW,GAAKC,UAAQ,YAZ9E9B,EAAMS,gBAmBlBR,EAAAA,EAAAA,MAACR,EAAAA,EAAK,CAACsC,UAAU,MAAKlC,SAAA,EACpBL,EAAAA,EAAAA,KAACwC,EAAAA,EAAU,CAAEC,QAAQ,KAAIpC,SAAC,yGAC1BL,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,CAAC/B,GAAI,CAAC4B,UAAW,QAASZ,UAAWb,EAAAA,GAAYC,GAAG,IAAGV,SAAC,qGAOrE,C,oEC9CA,SAAgB,aAAe,qC,qDCMhB,SAASQ,EAAa8B,GAAW,IAAV,MAACnC,GAAMmC,EACzC,MAAM,UAACC,EAAS,WAAEpD,EAAU,cAAEqD,IAC1BpD,EAAAA,EAAAA,YAAWC,EAAAA,IACT,EAAEoD,IAAMC,EAAAA,EAAAA,OACPC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IAE3CvD,EAAAA,EAAAA,YAAU,KACNC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUP,GAAY,GAC/D,CAACA,KAEJG,EAAAA,EAAAA,YAAU,KACNC,aAAaC,QAAQ,YAAaC,KAAKC,UAAU6C,GAAW,GAC7D,CAACA,IAEN,MAgBQO,EAAQ3D,GAAcA,EAAW4D,MAAMC,GAASA,EAAKpC,cAAgBT,EAAMS,cAEjF,CAAEqC,MAAOC,EAAAA,EAAI,MACb,CAACD,MAAOE,EAAAA,EAAK,MAEjB,OACExD,EAAAA,EAAAA,KAAAyD,EAAAA,SAAA,CAAApD,UACAL,EAAAA,EAAAA,KAAC0D,EAAAA,EAAY,CACbC,QAxBwBC,KACtBX,GAAeD,GACb,IACI,MAAMa,EAAWrE,GAAcA,EAAWsE,MAAMT,GAASA,EAAKpC,cAAgBT,EAAMS,cAEhF4B,EADAgB,EACeE,GAASA,EAAKC,QAAQX,GAASA,EAAKpC,cAAgBT,EAAMS,cAG1D8C,GAAS,IAAIA,EAAMvD,GAE1C,CACA,MAAOyD,GACHC,MAAMpB,EAAE,cACRqB,QAAQF,MAAMA,EAClB,CAAC,EAWL1C,UAAWC,EAAO4C,aAClBC,SAAS,QACP1D,IAAE2D,EAAAA,EAAAA,GAAA,GACKnB,MAKb,C,kCCpDA,Q,QAA4B,C,kCCD5B,SAAgB,IAAM,wBAAwB,eAAiB,mC","sources":["components/pages/LikePage/index.js","components/pages/LikePage/LikePage.jsx","webpack://movie-portal/./src/components/ui/AddToFavorite/AddToFavorite.module.css?6e2b","components/ui/AddToFavorite/AddToFavorite.jsx","components/ui/AddToFavorite/index.js","webpack://movie-portal/./src/components/ui/MoviesCard/MoviesCard.module.css?9ea0"],"sourcesContent":["import LikePage from \"./LikePage\";\r\n\r\nexport default LikePage;","import { Box, Rating, Stack, Tooltip, Link, Typography, Button } from '@mui/material'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link as RouterLink} from 'react-router-dom'\r\nimport styles from '../../ui/MoviesCard/MoviesCard.module.css'\r\nimport AppContext from '../../../context';\r\nimport AddToFavorite from '../../ui/AddToFavorite';\r\n\r\nexport default function LikePage() {\r\n  const {movieItems} = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n      localStorage.setItem('movieItems', JSON.stringify(movieItems));\r\n  }, [movieItems]);\r\n  \r\n\r\n  return (\r\n    <Stack  flexDirection='row'  flexWrap='wrap' justifyContent='center'>\r\n  {movieItems.length > 0 ? movieItems.map(movie =>\r\n  \r\n    <Stack key={movie.kinopoiskId} alignItems='center' sx={{ position: 'relative' }}>\r\n      <AddToFavorite movie={movie}/>\r\n    \r\n    <RouterLink to={`/movie/${movie.kinopoiskId || movie.filmId}`} >\r\n      <img  src={movie.posterUrlPreview} alt={movie.nameRu} className={styles.img}/>\r\n    </RouterLink>\r\n    <Link component={RouterLink} to={`/movie/${movie.kinopoiskId || movie.filmId}`} className={styles.textTypography}>{movie.nameRu ? movie.nameRu : movie.nameEng }</Link>\r\n    \r\n    {movie.ratingKinopoisk && (\r\n      <Stack>\r\n        <Tooltip title={`${movie.ratingKinopoisk} / 10`}>\r\n          <Box>\r\n            <Rating name='read-only' value={movie.ratingKinopoisk /2} precision={0.1} readOnly/>\r\n          </Box>\r\n        </Tooltip>\r\n      </Stack>\r\n    )}\r\n    </Stack>)\r\n    :\r\n    <Stack marginTop='20%'>\r\n      <Typography  variant='h3'>У вас нет избранных</Typography>\r\n      <Button sx={{marginTop: '15px'}} component={RouterLink} to='/'>Перейти в каталог</Button>\r\n    </Stack>\r\n  }\r\n  </Stack>\r\n\r\n\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"favoriteIcon\":\"AddToFavorite_favoriteIcon__vGTwf\"};","import React, { useContext, useEffect, useState } from 'react'\r\nimport AppContext from '../../../context';\r\nimport styles from './AddToFavorite.module.css'\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { red, grey } from '@mui/material/colors';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function AddToFavorite({movie}) {\r\n    const {userItems, movieItems, setMovieItems\r\n    } = useContext(AppContext);\r\n    const { t } = useTranslation();\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n      useEffect(() => {\r\n          localStorage.setItem('movieItems', JSON.stringify(movieItems));\r\n      }, [movieItems]);\r\n\r\n      useEffect(() => {\r\n          localStorage.setItem('userItems', JSON.stringify(userItems));\r\n      }, [userItems]);\r\n\r\n    const onAddToFavorite = () => {\r\n      setIsFavorite(!isFavorite)\r\n        try {\r\n            const findItem = movieItems && movieItems.find((item) => item.kinopoiskId === movie.kinopoiskId);\r\n            if (findItem){\r\n                setMovieItems((prev) => prev.filter((item) => item.kinopoiskId !== movie.kinopoiskId));\r\n                }\r\n            else{\r\n                setMovieItems((prev) => [...prev, movie]);\r\n              }\r\n        } \r\n        catch (error) {\r\n            alert(t('likeError'));\r\n            console.error(error);\r\n        };\r\n      };\r\n      const style = movieItems && movieItems.some((item) => item.kinopoiskId === movie.kinopoiskId)\r\n      ?\r\n      { color: red[500] } :\r\n      {color: grey[500] };\r\n      \r\n  return (\r\n    <>\r\n    <FavoriteIcon \r\n    onClick={onAddToFavorite}\r\n    className={styles.favoriteIcon} \r\n    fontSize=\"large\"  \r\n      sx={{\r\n          ...style\r\n        }} \r\n    /> \r\n    </>\r\n  )\r\n}\r\n","import AddToFavorite from \"./AddToFavorite\";\r\n\r\nexport default AddToFavorite;","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MoviesCard_img__mrpe7\",\"textTypography\":\"MoviesCard_textTypography__eihA1\"};"],"names":["movieItems","useContext","AppContext","useEffect","localStorage","setItem","JSON","stringify","_jsx","Stack","flexDirection","flexWrap","justifyContent","children","length","map","movie","_jsxs","alignItems","sx","position","AddToFavorite","RouterLink","to","concat","kinopoiskId","filmId","src","posterUrlPreview","alt","nameRu","className","styles","img","Link","component","textTypography","nameEng","ratingKinopoisk","Tooltip","title","Box","Rating","name","value","precision","readOnly","marginTop","Typography","variant","Button","_ref","userItems","setMovieItems","t","useTranslation","isFavorite","setIsFavorite","useState","style","some","item","color","red","grey","_Fragment","FavoriteIcon","onClick","onAddToFavorite","findItem","find","prev","filter","error","alert","console","favoriteIcon","fontSize","_objectSpread"],"sourceRoot":""}