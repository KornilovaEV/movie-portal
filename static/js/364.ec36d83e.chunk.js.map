{"version":3,"file":"static/js/364.ec36d83e.chunk.js","mappings":"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","sources":["components/pages/MoviesTopList/MoviesTopListSkeleton.jsx","components/pages/MoviesTopList/index.js","components/pages/MoviesTopList/MoviesTopList.jsx","webpack://movie-portal/./src/components/ui/AddToFavorite/AddToFavorite.module.css?6e2b","components/ui/AddToFavorite/AddToFavorite.jsx","components/ui/AddToFavorite/index.js","components/ui/MoviesCard/index.js","components/ui/MoviesCard/MoviesCard.jsx","components/ui/MoviesList/index.js","components/ui/MoviesList/MoviesList.jsx","webpack://movie-portal/./src/components/ui/MoviesCard/MoviesCard.module.css?9ea0"],"sourcesContent":["import { Skeleton, Stack } from '@mui/material'\r\nimport React from 'react'\r\n\r\nexport default function MoviesTopListSkeleton() {\r\n  return (\r\n    <>\r\n    <Stack flexDirection='row' sx={{mt: 2, mb: 2}}>\r\n        <Skeleton \r\n            animation=\"wave\" \r\n            variant=\"rectangular\"                    \r\n            sx={{marginRight: '15px',}}\r\n            height= '32px' \r\n            width='40px'\r\n        />\r\n        <Skeleton \r\n            animation=\"wave\" \r\n            variant=\"rectangular\"                    \r\n            height= '32px' \r\n            width='100px'\r\n        />\r\n    </Stack>\r\n    <Stack\r\n        direction='row'\r\n        justifyContent='center'\r\n        flexWrap='wrap'\r\n    >   \r\n    {Array(15).fill(null).map((_, ind) =>(\r\n        <Stack key={ind}>\r\n            <Skeleton \r\n                animation=\"wave\" \r\n                variant=\"rectangular\"                    \r\n                sx={{ marginTop: '7px', marginRight: '3px',}}\r\n                height= '322px' \r\n                width='215px'\r\n            />\r\n            <Skeleton \r\n                animation=\"wave\" \r\n                variant=\"text\"                 \r\n            />\r\n            <Skeleton \r\n                animation=\"wave\" \r\n                variant=\"text\"                 \r\n            />  \r\n        </Stack>\r\n    ))}\r\n    </Stack>\r\n\r\n    </>\r\n  )\r\n}\r\n","import MoviesTopList from \"./MoviesTopList\";\r\n\r\nexport default MoviesTopList;","import React, { useEffect, useState } from 'react'\r\nimport { useGetFilmsTopQuery } from '../../../services/kinopoiskAPI'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { menuItem } from '../../../constants'\r\nimport { Button, Stack, Typography } from '@mui/material';\r\nimport MoviesList from '../../ui/MoviesList';\r\nimport { ArrowBack } from '@mui/icons-material';\r\nimport ErrorMessage from '../../ui/ErrorMessage';\r\nimport MoviesTopListSkeleton from './MoviesTopListSkeleton';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function MoviesTopList() {\r\n  const location = useLocation();\r\n  const [page, setPage] = useState(1);\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation(); // Получение функции перевода\r\n  \r\n\r\n  const movieType = menuItem.find(el => el.url === location.pathname);\r\n  \r\n\r\n  const {data, error, isLoading} = useGetFilmsTopQuery({\r\n    type: movieType.value,\r\n    page,\r\n  })\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [location]);\r\n  \r\n  if(error) return <ErrorMessage />;\r\n  if(isLoading) return <MoviesTopListSkeleton />;\r\n\r\n  return (\r\n    <>\r\n      <Stack flexDirection='row' sx={{mt: 2, mb: 2}}>\r\n        <Button startIcon={<ArrowBack />} onClick={() => navigate(-1)}  />\r\n        <Typography variant='h5'>{ t(movieType.value)\r\n          }</Typography>\r\n      </Stack>\r\n      <MoviesList \r\n          movies={data.items} \r\n          totalPages={data.totalPages} \r\n          page={page} \r\n          setPage={setPage}\r\n        />\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"favoriteIcon\":\"AddToFavorite_favoriteIcon__vGTwf\"};","import React, { useContext, useEffect, useState } from 'react'\r\nimport AppContext from '../../../context';\r\nimport styles from './AddToFavorite.module.css'\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { red, grey } from '@mui/material/colors';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function AddToFavorite({movie}) {\r\n    const {userItems, movieItems, setMovieItems\r\n    } = useContext(AppContext);\r\n    const { t } = useTranslation();\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n      useEffect(() => {\r\n          localStorage.setItem('movieItems', JSON.stringify(movieItems));\r\n      }, [movieItems]);\r\n\r\n      useEffect(() => {\r\n          localStorage.setItem('userItems', JSON.stringify(userItems));\r\n      }, [userItems]);\r\n\r\n    const onAddToFavorite = () => {\r\n      setIsFavorite(!isFavorite)\r\n        try {\r\n            const findItem = movieItems && movieItems.find((item) => item.kinopoiskId === movie.kinopoiskId);\r\n            if (findItem){\r\n                setMovieItems((prev) => prev.filter((item) => item.kinopoiskId !== movie.kinopoiskId));\r\n                }\r\n            else{\r\n                setMovieItems((prev) => [...prev, movie]);\r\n              }\r\n        } \r\n        catch (error) {\r\n            alert(t('likeError'));\r\n            console.error(error);\r\n        };\r\n      };\r\n      const style = movieItems && movieItems.some((item) => item.kinopoiskId === movie.kinopoiskId)\r\n      ?\r\n      { color: red[500] } :\r\n      {color: grey[500] };\r\n      \r\n  return (\r\n    <>\r\n    <FavoriteIcon \r\n    onClick={onAddToFavorite}\r\n    className={styles.favoriteIcon} \r\n    fontSize=\"large\"  \r\n      sx={{\r\n          ...style\r\n        }} \r\n    /> \r\n    </>\r\n  )\r\n}\r\n","import AddToFavorite from \"./AddToFavorite\";\r\n\r\nexport default AddToFavorite;","import MoviesCard from \"./MoviesCard\";\r\n\r\nexport default MoviesCard;","import { Box, Rating, Stack, Tooltip, Link } from '@mui/material'\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { Link as RouterLink} from 'react-router-dom'\r\nimport styles from './MoviesCard.module.css'\r\nimport AddToFavorite from '../AddToFavorite';\r\nimport AppContext from '../../../context';\r\n\r\nexport default function MoviesCard({movie}) {\r\n  const {userItems} = useContext(AppContext);  \r\n\r\n  useEffect(() => {\r\n            localStorage.setItem('userItems', JSON.stringify(userItems));\r\n        }, [userItems]);\r\n  return (\r\n      <Stack alignItems='center' sx={{ position: 'relative' }}>\r\n        {\r\n        userItems.some( user => user.session === true) && <AddToFavorite movie={movie}/>\r\n        }\r\n        <RouterLink to={`/movie/${movie.kinopoiskId || movie.filmId}`} >\r\n          <img  src={movie.posterUrlPreview} alt={movie.nameRu} className={styles.img}/>\r\n        </RouterLink>\r\n        \r\n        <Link component={RouterLink} to={`/movie/${movie.kinopoiskId || movie.filmId}`} className={styles.textTypography}>{movie.nameRu ? movie.nameRu : movie.nameEng }</Link>\r\n        \r\n        {movie.ratingKinopoisk && (\r\n          <Stack>\r\n            <Tooltip title={`${movie.ratingKinopoisk} / 10`}>\r\n              <Box>\r\n                <Rating name='read-only' value={movie.ratingKinopoisk /2} precision={0.1} readOnly/>\r\n              </Box>\r\n            </Tooltip>\r\n          </Stack>\r\n        )}\r\n      </Stack>\r\n  );\r\n}\r\n","import MoviesList from \"./MoviesList\";\r\n\r\nexport default MoviesList;","import { Pagination, Stack } from '@mui/material';\r\nimport React from 'react';\r\nimport MoviesCard from '../MoviesCard';\r\nimport PropTypes from 'prop-types';\r\nexport default function MoviesList({movies, totalPages, page, setPage}) {\r\n  return (\r\n    <>\r\n      <Stack direction='row' justifyContent='center' flexWrap='wrap'>\r\n        {movies.map(movie => (\r\n          <MoviesCard key={movie.kinopoiskId} movie={movie}/>\r\n      \r\n        ))}\r\n      </Stack>\r\n      <Stack alignItems='center'>\r\n      {totalPages > 1 && \r\n        <Pagination \r\n          count={totalPages} \r\n          color=\"primary\" \r\n          variant=\"outlined\" \r\n          size='large' \r\n          page={page}\r\n          onChange={(_ , value) => setPage(value)}\r\n          boundaryCount={2} \r\n        />}\r\n      </Stack>\r\n  </>\r\n  )\r\n}\r\n\r\n\r\nMoviesList.propTypes = {\r\n    totalPages: PropTypes.number,\r\n    page: PropTypes.number,\r\n    setPage: PropTypes.func\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MoviesCard_img__mrpe7\",\"textTypography\":\"MoviesCard_textTypography__eihA1\"};"],"names":["MoviesTopListSkeleton","_jsxs","_Fragment","children","Stack","flexDirection","sx","mt","mb","_jsx","Skeleton","animation","variant","marginRight","height","width","direction","justifyContent","flexWrap","Array","fill","map","_","ind","marginTop","location","useLocation","page","setPage","useState","navigate","useNavigate","t","useTranslation","movieType","menuItem","find","el","url","pathname","data","error","isLoading","useGetFilmsTopQuery","type","value","useEffect","ErrorMessage","Button","startIcon","ArrowBack","onClick","Typography","MoviesList","movies","items","totalPages","AddToFavorite","_ref","movie","userItems","movieItems","setMovieItems","useContext","AppContext","isFavorite","setIsFavorite","localStorage","setItem","JSON","stringify","style","some","item","kinopoiskId","color","red","grey","FavoriteIcon","onAddToFavorite","findItem","prev","filter","alert","console","className","styles","favoriteIcon","fontSize","_objectSpread","alignItems","position","user","session","RouterLink","to","concat","filmId","src","posterUrlPreview","alt","nameRu","img","Link","component","textTypography","nameEng","ratingKinopoisk","Tooltip","title","Box","Rating","name","precision","readOnly","MoviesCard","Pagination","count","size","onChange","boundaryCount"],"sourceRoot":""}