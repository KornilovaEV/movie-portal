{"version":3,"file":"static/js/549.40ac3b3e.chunk.js","mappings":"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","sources":["components/pages/Registration/index.js","components/pages/Registration/Registration.jsx"],"sourcesContent":["import Registration from \"./Registration\";\r\n\r\nexport default Registration;","import { Button, Input, Link, Stack } from '@mui/material';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport AppContext from '../../../context';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Registration() {\r\n  const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordDouble, setPasswordDouble] = useState('');\r\n    const [emailDirty, setEmailDirty] = useState(false);\r\n    const [passwordDirty, setPasswordDirty] = useState(false);\r\n    const [passwordDoubleDirty, setPasswordDoubleDirty] = useState(false);\r\n    const [emailError, setEmailError] = useState(t('emailNull'));\r\n    const [passwordError, setPasswordError] = useState(t('passwordNull'));\r\n    const [passwordDoubleError, setPasswordDoubleError] = useState(t('passwordEqual'));\r\n    const [formValid, setFormValid] = useState(false);\r\n    const {userItems, setUserItems} = useContext(AppContext);  \r\n    \r\n\r\n    useEffect(() => {\r\n              localStorage.setItem('userItems', JSON.stringify(userItems));\r\n          }, [userItems]);\r\n\r\n    useEffect(() => {\r\n      (emailError ||  passwordError || passwordDoubleError) ?  setFormValid(false) : setFormValid(true)\r\n    }, [emailError, passwordError, passwordDoubleError])\r\n  \r\n    const onRegistrationUser = () => {\r\n        setUserItems((prev) => [...prev, {'email': email, 'password': password, 'session': true, 'like': [] }]);\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordDouble('');       \r\n        navigate('/user'); \r\n    };\r\n    const blurHandler = (e) => {\r\n      switch (e.target.name) {\r\n        case 'email':\r\n          setEmailDirty(true) \r\n          break;\r\n        case 'password':\r\n          setPasswordDirty(true) \r\n          break;\r\n        case 'passwordDouble':\r\n            setPasswordDoubleDirty(true) \r\n            break;\r\n      }\r\n    }\r\n  \r\n    const emailHandler = (e) => {\r\n      setEmail(e.target.value);\r\n      const re =\r\n    /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    if (userItems.some( user => user.email === e.target.value)){\r\n      setEmailError(t('emailDuplicate'))\r\n    } else if(!re.test(String(e.target.value).toLocaleLowerCase())){\r\n      setEmailError(t('emailIncorrect'))\r\n    } else{\r\n      setEmailError('')\r\n    }\r\n    }\r\n    const passwordDoubleHandler = (e) => {\r\n        setPasswordDouble(e.target.value);\r\n    if(e.target.value === password){\r\n        setPasswordDoubleError('')\r\n    }\r\n        else{\r\n          setPasswordDoubleError(t('passwordEqual'))\r\n        }\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n      if(e.target.value.length > 8 || e.target.value.length < 3){\r\n        setPasswordError(t('passwordIncorrect'))\r\n        if(!e.target.value.length){\r\n          setPasswordError(t('passwordNull'))\r\n        }\r\n      }\r\n       else{\r\n        setPasswordError('')\r\n      }}\r\n  \r\n    return (\r\n      <Stack alignItems='center'  >\r\n          <h1>{t('registrationAccount')}</h1>\r\n        <Stack flexDirection='column' >\r\n          {(emailError && emailDirty) && <div style={{color:'red'}}>{emailError}</div>}\r\n          <Input \r\n            onChange={e => emailHandler(e)}\r\n            value={email} \r\n            sx={{\r\n              marginTop: '25px'\r\n            }} \r\n            onBlur={e => blurHandler(e)} \r\n            name='email' \r\n            type='text' \r\n            placeholder= {t('logEnter')}\r\n          />\r\n          {(passwordError && passwordDirty) && <div style={{color:'red'}}>{passwordError}</div>}\r\n          <Input \r\n            onChange={e => passwordHandler(e)}\r\n            value={password} \r\n            sx={{\r\n              marginTop: '25px'\r\n            }} \r\n            onBlur={e => blurHandler(e)} \r\n            name='password' \r\n            type='password' \r\n            placeholder={t('passwordEnter')}/>\r\n            {(passwordDoubleError && passwordDoubleDirty) && <div style={{color:'red'}}>{passwordDoubleError}</div>}\r\n            <Input \r\n              onChange={e => passwordDoubleHandler(e)}\r\n              value={passwordDouble} \r\n              sx={{\r\n                marginTop: '25px'\r\n              }} \r\n              onBlur={e => blurHandler(e)} \r\n              name='passwordDouble' \r\n              type='passwordDouble' \r\n              placeholder={t('passwordEnter')} />\r\n          <Button \r\n            disabled={!formValid}\r\n            sx={{\r\n              marginTop: '25px'\r\n            }} \r\n            onClick={onRegistrationUser}\r\n          >{t('confirm')}</Button>\r\n          <Button \r\n        component={Link}\r\n          to='/autorization'\r\n            sx={{\r\n              marginTop: '25px'\r\n            }} \r\n          >{t('logInHaveAcc')}</Button>\r\n        </Stack>\r\n      </Stack>\r\n    )\r\n}\r\n"],"names":["navigate","useNavigate","t","useTranslation","email","setEmail","useState","password","setPassword","passwordDouble","setPasswordDouble","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","passwordDoubleDirty","setPasswordDoubleDirty","emailError","setEmailError","passwordError","setPasswordError","passwordDoubleError","setPasswordDoubleError","formValid","setFormValid","userItems","setUserItems","useContext","AppContext","useEffect","localStorage","setItem","JSON","stringify","blurHandler","e","target","name","_jsxs","Stack","alignItems","children","_jsx","flexDirection","style","color","Input","onChange","value","some","user","test","String","toLocaleLowerCase","emailHandler","sx","marginTop","onBlur","type","placeholder","length","passwordHandler","passwordDoubleHandler","Button","disabled","onClick","onRegistrationUser","prev","component","Link","to"],"sourceRoot":""}